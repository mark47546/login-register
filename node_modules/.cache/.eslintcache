[{"/Users/marknpr/Documents/work/renthub/login-register/src/index.js":"1","/Users/marknpr/Documents/work/renthub/login-register/src/App.js":"2","/Users/marknpr/Documents/work/renthub/login-register/src/reportWebVitals.js":"3","/Users/marknpr/Documents/work/renthub/login-register/src/components/Signup.js":"4","/Users/marknpr/Documents/work/renthub/login-register/src/utils.js":"5","/Users/marknpr/Documents/work/renthub/login-register/src/components/facebook.js":"6","/Users/marknpr/Documents/work/renthub/login-register/src/components/Login.js":"7"},{"size":322,"mtime":1662075645964,"results":"8","hashOfConfig":"9"},{"size":1799,"mtime":1662074820720,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1661971287046,"results":"11","hashOfConfig":"9"},{"size":4953,"mtime":1662078350808,"results":"12","hashOfConfig":"9"},{"size":378,"mtime":1662072732128,"results":"13","hashOfConfig":"9"},{"size":681,"mtime":1662078343017,"results":"14","hashOfConfig":"9"},{"size":3209,"mtime":1662075595403,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1gpywj5",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"19"},"/Users/marknpr/Documents/work/renthub/login-register/src/index.js",[],[],[],"/Users/marknpr/Documents/work/renthub/login-register/src/App.js",[],[],"/Users/marknpr/Documents/work/renthub/login-register/src/reportWebVitals.js",[],[],"/Users/marknpr/Documents/work/renthub/login-register/src/components/Signup.js",["39","40"],[],"/Users/marknpr/Documents/work/renthub/login-register/src/utils.js",[],[],"/Users/marknpr/Documents/work/renthub/login-register/src/components/facebook.js",["41"],[],"/Users/marknpr/Documents/work/renthub/login-register/src/components/Login.js",["42","43"],[],"import React, {useState} from \"react\";\nimport validator from \"validator\";\nimport RegexPassword from \"../utils\";\nimport '../styles/signup.css'\n\nfunction Login({}){\n    const [values, setValues] = useState({\n        email:'',\n        password:'',\n    })\n\n    const [errors, setErrors] = useState({\n        email: false,\n        password: false,\n        fetchError: false,\n        fetchErrorMsg: '',\n    })\n\n    const handleChange = (fieldName) => (e) =>{\n        const userValue = e.target.value\n        let isCorrectValue = \n            fieldName === 'email'\n              ? validator.isEmail(userValue)\n              : RegexPassword(userValue)\n            isCorrectValue\n              ? setErrors({ ...errors, [fieldName]: false })\n              : setErrors({ ...errors, [fieldName]: true })\n            setValues({...values, [fieldName]: e.target.value})\n\n    }\n\n    const handleSubmit = async(e) => {\n        e.preventDefault()\n        try {\n            const res = await fetch('/api/login',{\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    email:values.email,\n                    password:values.password\n                })\n            })\n            if(!res.ok){\n                const error = await res.json()\n                return setErrors({\n                ...errors,\n                fetchError: true,\n                fetchErrorMsg: error.msg,\n                })\n            }\n\n            const data = await res.json()\n            console.log({data});\n            setErrors({\n                ...errors,\n                fetchError: true,\n                fetchErrorMsg: data.msg,\n            })\n\n            setValues({\n                email:'',\n                password:''\n            })\n            return \n        }  catch(error){\n            setErrors({\n                ...errors,\n                fetchError: true,\n                fetchErrorMsg:\n                  'There was a problem with our server, please try again later',\n            })\n        }\n    }\n\n    return (\n        <> \n        <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <label htmlFor=\"email\">อีเมล</label>\n                <input type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"อีเมล\" value={values.email} onChange={handleChange('email')} \n                error={errors.email.toString()} helpertext={errors.email ? 'Please insert a valid email address': undefined}/>\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"password-field\">รหัสผ่าน</label>\n                <input type={\"password\"} className=\"form-control\" id=\"password\" placeholder=\"รหัสผ่าน\" value={values.password} onChange={handleChange('password')} error={errors.password.toString()}/>\n            </div>\n            <a className=\"forgot\">ลืม Password?</a>\n            <button type=\"submit\" className=\"btn btn-primary button\">เข้าสู่ระบบ</button>\n        </form>  \n        \n       </>\n    )\n}\n\nexport default Login",{"ruleId":"44","severity":1,"message":"45","line":27,"column":9,"nodeType":"46","messageId":"47","endLine":43,"endColumn":10},{"ruleId":"48","severity":1,"message":"49","line":118,"column":13,"nodeType":"50","endLine":118,"endColumn":35},{"ruleId":"51","severity":1,"message":"52","line":7,"column":10,"nodeType":"53","messageId":"54","endLine":7,"endColumn":15},{"ruleId":"55","severity":1,"message":"56","line":6,"column":16,"nodeType":"57","messageId":"58","endLine":6,"endColumn":18},{"ruleId":"48","severity":1,"message":"49","line":89,"column":13,"nodeType":"50","endLine":89,"endColumn":35},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'login' is assigned a value but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected"]